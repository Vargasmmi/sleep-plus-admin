# Build stage
FROM node:18-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install all dependencies (including dev dependencies for build)
RUN npm install

# Copy all source files
COPY . .

# Build the frontend
RUN npm run build

# Production stage - Serve static files
FROM node:18-alpine

WORKDIR /app

# Install serve to serve static files
RUN npm install -g serve

# Copy only the built files from builder
COPY --from=builder /app/dist ./dist

# Create serve configuration
RUN echo '{ \
  "headers": [ \
    { \
      "source": "**/*.js", \
      "headers": [{"key": "Content-Type", "value": "application/javascript; charset=UTF-8"}] \
    }, \
    { \
      "source": "**/*.mjs", \
      "headers": [{"key": "Content-Type", "value": "application/javascript; charset=UTF-8"}] \
    }, \
    { \
      "source": "**/*.css", \
      "headers": [{"key": "Content-Type", "value": "text/css; charset=UTF-8"}] \
    } \
  ], \
  "rewrites": [{"source": "**", "destination": "/index.html"}], \
  "cleanUrls": true, \
  "trailingSlash": false \
}' > /app/serve.json

# Expose port 3000
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:3000 || exit 1

# Serve the static files on port 3000
CMD ["serve", "-s", "dist", "-l", "3000", "-c", "/app/serve.json"]
